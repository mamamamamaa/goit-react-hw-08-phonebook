{"version":3,"file":"static/js/555.3765c12b.chunk.js","mappings":"0OACA,EAA8B,kC,uCCgBjBA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IAM1B,OACE,4BACE,mBAAOC,UAAU,6BAAjB,mCAEE,kBACEA,UAAWC,EAAAA,EAAAA,MACXC,YAAY,MACZC,KAAK,OACLC,KAAK,SACLC,SAbmB,SAAAC,GACzBf,GAASgB,EAAAA,EAAAA,GAAUD,EAAEE,OAAOC,OAC7B,QAcG,gBAAIT,UAAU,yDAAd,WACE,SAACU,EAAA,EAAD,CAAQC,OAAQf,IACfE,IAAS,wBAAKA,IACM,IAApBL,EAASmB,OACNnB,EAASoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIV,EAAP,EAAOA,KAAMW,EAAb,EAAaA,OAAb,OACX,gBAAaf,UAAWgB,EAAxB,WACE,kBAAMhB,UAAU,6BAAhB,WACE,SAAC,MAAD,CAAiCiB,KAAM,GAAIjB,UAAU,SAAU,IAC9DI,MAEH,kBAAMJ,UAAU,6BAAhB,UACG,KACD,SAAC,MAAD,CAAoBiB,KAAM,GAAIjB,UAAU,SAF1C,IAEqDe,MAErD,mBACEZ,KAAK,SACLH,UAAU,2FACVkB,QAAS,kBAAM3B,GAAS4B,EAAAA,EAAAA,IAAcL,GAA7B,EAHX,UAKE,SAAC,MAAD,CAAiBG,KAAM,SAdlBH,EADE,IAmBb,QAIX,E,UChDD,EAbiB,WACf,IAAMvB,GAAWC,EAAAA,EAAAA,MAKjB,OAJA4B,EAAAA,EAAAA,YAAU,WACR7B,GAAS8B,EAAAA,EAAAA,MACV,GAAE,CAAC9B,KAGF,+BACE,SAACD,EAAD,KAGL,C,8ICdYgC,EAAiB,SAAAC,GAAK,OAAIA,EAAM9B,SAAS+B,KAAnB,EAItB3B,EAAkB,SAAA0B,GAAK,OAAIA,EAAM9B,SAASG,SAAnB,EAEvBG,EAAc,SAAAwB,GAAK,OAAIA,EAAME,OAAO3B,KAAjB,EAEnBH,GAAyB+B,EAAAA,EAAAA,IACpC,CAACJ,EAPyB,SAAAC,GAAK,OAAIA,EAAME,MAAV,IAQ/B,SAAChC,EAAUkC,GACT,IAAMC,EAAmBD,EAAeE,cACxC,OAAOpC,EAASgC,QAAO,qBAAGrB,KACnByB,cAAcC,SAASF,EADP,GAGxB,IAEUG,GAAkBL,EAAAA,EAAAA,IAAe,CAACJ,IAAiB,SAAA7B,GAC9D,OAAO,SAAAuC,GACL,IAAMC,EAAiBD,EAAQH,cAC/B,OAAQpC,EAASyC,MAAK,SAAAC,GAAI,OAAIA,EAAK/B,KAAKyB,gBAAkBI,CAAhC,GAC3B,CACF,G,qBCvBD,KAAgB,cAAgB,kCAAkC,KAAO,yBAAyB,MAAQ,0BAA0B,MAAQ,0BAA0B,OAAS,2B","sources":["webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.scss?9b70","components/ContactsList/ContactsList.jsx","pages/Contacts.jsx","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/FormStyles/FormStyles.module.scss?0b47"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactCard\":\"ContactsList_contactCard__7dz-q\"};","import { setFilter } from '../../redux/contacts/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport formStyle from '../FormStyles/FormStyles.module.scss';\nimport ownStyle from './ContactsList.module.scss';\nimport {\n  MdDeleteForever,\n  MdOutlineDriveFileRenameOutline,\n} from 'react-icons/md';\nimport { BsTelephoneForward } from 'react-icons/bs';\nimport { Loader } from '../Loaders/Loader';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div>\n      <label className=\"flex flex-col items-center\">\n        Find contacts by name\n        <input\n          className={formStyle.input}\n          placeholder=\"...\"\n          type=\"text\"\n          name=\"search\"\n          onChange={handleFilterChange}\n        />\n      </label>\n      <ul className=\"flex items-center justify-center mt-10 gap-9 flex-wrap\">\n        <Loader isOpen={isLoading} />\n        {error && <h3>{error}</h3>}\n        {contacts.length !== 0\n          ? contacts.map(({ id, name, number }) => (\n              <li key={id} className={ownStyle.contactCard}>\n                <span className=\"flex items-center text-2xl\">\n                  <MdOutlineDriveFileRenameOutline size={20} className=\"mr-4\" />{' '}\n                  {name}\n                </span>\n                <span className=\"flex items-center text-2xl\">\n                  {' '}\n                  <BsTelephoneForward size={20} className=\"mr-4\" /> {number}\n                </span>\n                <button\n                  type=\"button\"\n                  className=\"flex w-16 h-10 mx-auto justify-center items-center bg-indigo-500 text-white rounded-full\"\n                  onClick={() => dispatch(deleteContact(id))}\n                >\n                  <MdDeleteForever size={20} />\n                </button>\n              </li>\n            ))\n          : ''}\n      </ul>\n    </div>\n  );\n};\n","import { ContactsList } from '../components/ContactsList/ContactsList';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactsList />\n    </>\n  );\n};\n\nexport default Contacts;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.filter.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, contactsFilter) => {\n    const normalisedFilter = contactsFilter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalisedFilter)\n    );\n  }\n);\nexport const selectIsContact = createSelector([selectContacts], contacts => {\n  return newUser => {\n    const normalizedName = newUser.toLowerCase();\n    return !contacts.find(user => user.name.toLowerCase() === normalizedName);\n  };\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"FormStyles_formContainer__F6whV\",\"form\":\"FormStyles_form__Dc4BE\",\"label\":\"FormStyles_label__dCMdA\",\"input\":\"FormStyles_input__g0R40\",\"button\":\"FormStyles_button__-4rO6\"};"],"names":["ContactsList","dispatch","useDispatch","contacts","useSelector","selectFilteredContacts","isLoading","selectIsLoading","error","selectError","className","formStyle","placeholder","type","name","onChange","e","setFilter","target","value","Loader","isOpen","length","map","id","number","ownStyle","size","onClick","deleteContact","useEffect","fetchContacts","selectContacts","state","items","filter","createSelector","contactsFilter","normalisedFilter","toLowerCase","includes","selectIsContact","newUser","normalizedName","find","user"],"sourceRoot":""}