{"version":3,"file":"static/js/60.433b040d.chunk.js","mappings":"6PAOaA,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IASlC,OACE,SAAC,KAAD,CAAQC,cAAe,CAAEC,KAAM,GAAIC,OAAQ,IAAMC,SAThC,SAAC,EAAkBC,GAAY,IAA5BH,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,OACrBL,EAAcI,IAInBN,GAASU,EAAAA,EAAAA,IAAW,CAAEJ,KAAAA,EAAMC,OAAAA,KAC5BE,EAAOE,aAJLC,MAAM,GAAD,OAAIN,EAAJ,2BAKR,EAEC,SACG,gBAAGO,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAX,OACC,UAAC,KAAD,CAAMC,UAAWC,EAAAA,EAAAA,KAAjB,WACE,mBAAOD,UAAWC,EAAAA,EAAAA,MAAlB,kBAEE,kBACED,UAAWC,EAAAA,EAAAA,MACXC,KAAK,OACLX,KAAK,OACLY,QAAQ,yHACRC,MAAM,yIACNC,YAAY,MACZC,UAAQ,EACRC,MAAOT,EAAOP,KACdiB,SAAUT,QAGd,mBAAOC,UAAWC,EAAAA,EAAAA,MAAlB,oBAEE,kBACED,UAAWC,EAAAA,EAAAA,MACXC,KAAK,MACLX,KAAK,SACLY,QAAQ,yFACRC,MAAM,+FACNE,UAAQ,EACRD,YAAY,MACZE,MAAOT,EAAON,OACdgB,SAAUT,QAGd,oBACEG,KAAK,SACLF,UAAU,+KAFZ,WAIE,SAAC,MAAD,IAJF,WA9BH,GAyCN,ECjDD,EATa,WACX,OACE,iBAAKA,UAAWS,EAAAA,EAAAA,cAAhB,WACE,eAAIT,UAAU,gBAAd,0BACA,SAAChB,EAAD,MAGL,C,8ICRY0B,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAItBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMM,OAAOC,KAAjB,EAEnBC,GAAyBC,EAAAA,EAAAA,IACpC,CAACV,EAPyB,SAAAC,GAAK,OAAIA,EAAMM,MAAV,IAQ/B,SAACL,EAAUS,GACT,IAAMC,EAAmBD,EAAeE,cACxC,OAAOX,EAASK,QAAO,qBAAG1B,KACnBgC,cAAcC,SAASF,EADP,GAGxB,IAEUjC,GAAkB+B,EAAAA,EAAAA,IAAe,CAACV,IAAiB,SAAAE,GAC9D,OAAO,SAAAa,GACL,IAAMC,EAAiBD,EAAQF,cAC/B,OAAQX,EAASe,MAAK,SAAAC,GAAI,OAAIA,EAAKrC,KAAKgC,gBAAkBG,CAAhC,GAC3B,CACF,G,qBCvBD,KAAgB,cAAgB,kCAAkC,KAAO,yBAAyB,MAAQ,0BAA0B,MAAQ,0BAA0B,OAAS,2B","sources":["components/ContactForm/ContactForm.jsx","pages/Form.jsx","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/FormStyles/FormStyles.module.scss?0b47"],"sourcesContent":["import { Form, Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsContact } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport { FaRegAddressCard } from 'react-icons/fa';\nimport formStyles from '../FormStyles/FormStyles.module.scss';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const checkContacts = useSelector(selectIsContact);\n  const nameSubmit = ({ name, number }, action) => {\n    if (!checkContacts(name)) {\n      alert(`${name} is already is contacts`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    action.resetForm();\n  };\n  return (\n    <Formik initialValues={{ name: '', number: '' }} onSubmit={nameSubmit}>\n      {({ values, handleChange }) => (\n        <Form className={formStyles.form}>\n          <label className={formStyles.label}>\n            Name\n            <input\n              className={formStyles.input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              placeholder=\"...\"\n              required\n              value={values.name}\n              onChange={handleChange}\n            />\n          </label>\n          <label className={formStyles.label}>\n            Number\n            <input\n              className={formStyles.input}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              placeholder=\"...\"\n              value={values.number}\n              onChange={handleChange}\n            />\n          </label>\n          <button\n            type=\"submit\"\n            className=\"transition-all duration-700 hover:bg-white hover:text-black flex items-center justify-center w-[50%] mx-auto bg-indigo-500 text-white text-xl px-4 py-1 rounded-xl shadow-lg\"\n          >\n            <FaRegAddressCard />\n            Add\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport formStyle from '../components/FormStyles/FormStyles.module.scss';\n\nconst Form = () => {\n  return (\n    <div className={formStyle.formContainer}>\n      <h1 className=\"text-2xl pb-6\">Add contact</h1>\n      <ContactForm />\n    </div>\n  );\n};\n\nexport default Form;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.filter.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, contactsFilter) => {\n    const normalisedFilter = contactsFilter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalisedFilter)\n    );\n  }\n);\nexport const selectIsContact = createSelector([selectContacts], contacts => {\n  return newUser => {\n    const normalizedName = newUser.toLowerCase();\n    return !contacts.find(user => user.name.toLowerCase() === normalizedName);\n  };\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"FormStyles_formContainer__F6whV\",\"form\":\"FormStyles_form__Dc4BE\",\"label\":\"FormStyles_label__dCMdA\",\"input\":\"FormStyles_input__g0R40\",\"button\":\"FormStyles_button__-4rO6\"};"],"names":["ContactForm","dispatch","useDispatch","checkContacts","useSelector","selectIsContact","initialValues","name","number","onSubmit","action","addContact","resetForm","alert","values","handleChange","className","formStyles","type","pattern","title","placeholder","required","value","onChange","formStyle","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","filter","error","selectFilteredContacts","createSelector","contactsFilter","normalisedFilter","toLowerCase","includes","newUser","normalizedName","find","user"],"sourceRoot":""}